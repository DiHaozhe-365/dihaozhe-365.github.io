<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>生存还是死亡——悲剧王子的内心独白</title>
      <link href="/posts/10004/"/>
      <url>/posts/10004/</url>
      
        <content type="html"><![CDATA[<h2 id="英汉译文"><a href="#英汉译文" class="headerlink" title="英汉译文"></a>英汉译文</h2><h3 id="Act-Ⅲ-Scene-Ⅰ"><a href="#Act-Ⅲ-Scene-Ⅰ" class="headerlink" title="Act Ⅲ Scene Ⅰ"></a>Act Ⅲ Scene Ⅰ</h3><details class="folding-tag" ><summary> Act Ⅲ Scene Ⅰ (excerpt) </summary>              <div class='content'>              <p><em>A Room in the Castle</em></p><p><strong>Hamlet:</strong></p><p>To be, or not to be, that is the question: <psw>——生存还是死亡，这是一个问题</psw></p><p>Whether ‘tis nobler in the mind to suffer <psw>——这两种行为，究竟哪一个更高贵？</psw></p><p>The slings and arrows of outrageous fortune, <psw>——是默然忍受崎岖命运之无妄之灾吗？</psw></p><p>Or to take arms against a sea of troubles, <psw>——还是挺身反抗人世无涯的苦难</psw></p><p>And by opposing end them? To die, to sleep — <psw>——在奋斗中克服一切？死去了，便睡着了</psw></p><p>No more — and by a sleep to say we end <psw>——不过如此。倘若睡梦能帮我们结束这一切</psw></p><p>The heartache and the thousand natural shocks <psw>——使我们免遭心头之痛以及肉体之千百打击</psw></p><p>That flesh is heir to: ‘tis a consummation <psw>——这样完美的结局</psw></p><p>Devoutly to be wished. To die, to sleep: <psw>——正是我们真切企盼的。死去了，便睡着了</psw></p><p>To sleep, perchance to dream: ay, there’s the rub, <psw>——睡后，或许会有梦：对，这便是困难所在</psw></p><p>For in that sleep of death what dreams may come <psw>——因为在那死去的睡眠中，当我们摆脱终有一死的皮囊后</psw></p><p>When we have shuffled off this mortal coil, <psw>——将会做着怎样的梦</psw></p><p>Must give us pause: there’s the respect <psw>——定会使我们踌躇顾虑：因此，人们甘于向苦难屈服</psw></p><p>That makes calamity of so long life, <psw>——从而陷入了人生无尽的灾祸</psw></p><p>For who would bear the whips and scorns of time, <psw>——否则，谁又愿意忍受人世的鞭挞和讥嘲</psw></p><p>The oppressor’s wrong, the proud man’s contumely, <psw>——如暴君之政、骄者之傲</psw></p><p>The pangs of disprized love, the law’s delay, <psw>——如失恋之痛、法章之迁延</psw></p><p>The insolence of office, and the spurns <psw>——官吏之暴横</psw></p><p>That patient merit of the unworthy takes, <psw>——以及费尽辛勤所换来的徒劳</psw></p><p>When he himself might his quietus make <psw>——倘若他只用一柄小小的刀子</psw></p><p>With a bare bodkin? Who would these fardels bear, <psw>——就可以清算他自己的一生？若非忌惮未知的死后</psw></p><p>To grunt and sweat under a weary life, <psw>——谁又愿意负着这样的重担</psw></p><p>But that the dread of something after death, <psw>——在烦劳的生命的压迫下呻吟流汗</psw></p><p>The undiscovered country from whose bourn <psw>——惧怕那从来不曾有一个旅人回来过的神秘之国</psw></p><p>No traveller returns, puzzles the will, <psw>——是它迷惑了我们的意志</psw></p><p>And makes us rather bear those ills we have <psw>——使我们宁愿忍受当下的折磨</psw></p><p>Than fly to others that we know not of? <psw>——也不敢向未知的痛苦飞去？</psw></p><p>Thus conscience does make cowards of us all: <psw>——重重的顾虑使我们全变成了懦夫</psw></p><p>And thus the native hue of resolution <psw>——故此，决心那炽热的光彩</psw></p><p>Is sicklied o’er with the pale cast of thought, <psw>——被审慎的思维蒙上了一层灰色</psw></p><p>And enterprises of great pitch and moment <psw>——伟大的事业在这般考虑下</psw></p><p>With this regard their currents turn awry, <psw>——也会逆流而退</psw></p><p>And lose the name of action. Soft you now, <psw>——失去行动的意义</psw></p><p>The fair Ophelia — Nymph, in thy orisons <psw>——美丽的欧菲莉亚来了——宁芙，你祈祷时</psw></p><p>Be all my sins remembered. <psw>——要记起我一切罪孽</psw></p>              </div>            </details><h2 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h2><p>The famous soliloquy “to be or not to be” in Shakespeare’s Hamlet is a profound and introspective examination of life and death. The understanding of this inner monologue can be analyzed from multiple perspectives, including Hamlet’s character, the story background, and the writing background: </p><ol><li><p>Hamlet’s Character:<br>Hamlet is a complex and contemplative character. In this soliloquy, he ponders the nature of existence and contemplates suicide as a means to escape the hardships of life. “To be” represents the act of continuing to live and face the struggles, while “not to be” refers to ceasing to exist and ending one’s suffering. Hamlet’s existential crisis, his deep sorrow over his father’s death, his disillusionment with the world, and his doubts about his own purpose all contribute to his internal conflict represented in this soliloquy.</p></li><li><p>Story Background:<br>The story of Hamlet revolves around a young prince who is torn apart by grief, betrayal, and the desire for revenge. The soliloquy appears in Act III, Scene I, where Hamlet contemplates the pros and cons of life, pondering the consequences of taking action or succumbing to inaction. The speech occurs at a crucial point in the play when Hamlet is contemplating whether to proceed with his plan to avenge his father’s murder or to abandon it. The soliloquy showcases Hamlet’s hesitation and his struggle to make sense of the moral, ethical, and emotional complexities of his situation.</p></li><li><p>Writing Background:<br>Shakespeare was a master of language and often used his characters to explore profound philosophical and moral dilemmas. The “to be or not to be” soliloquy exemplifies his ability to delve into the human psyche and depict complex emotions through poetic language. The use of antithesis, rhetorical questions, and vivid imagery in this soliloquy adds to its dramatic impact. It not only captures the essence of Hamlet’s internal turmoil but also touches upon universal questions about the meaning of life, the fear of the unknown, and the contemplation of mortality.</p></li></ol><p>In summary, the understanding of the soliloquy “to be or not to be” in Hamlet requires taking into account Hamlet’s character traits, the story’s background, and Shakespeare’s writing style. It reflects Hamlet’s existential crisis, his unique circumstances in the play, and Shakespeare’s skillful crafting of his characters and themes.</p>]]></content>
      
      
      <categories>
          
          <category> 英语文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语文学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宇宙最强集成开发环境——IDEA</title>
      <link href="/posts/10003/"/>
      <url>/posts/10003/</url>
      
        <content type="html"><![CDATA[<h2 id="认识-IntelliJ-IDEA"><a href="#认识-IntelliJ-IDEA" class="headerlink" title="认识 IntelliJ IDEA"></a>认识 IntelliJ IDEA</h2><h3 id="JetBrains-公司介绍"><a href="#JetBrains-公司介绍" class="headerlink" title="JetBrains 公司介绍"></a>JetBrains 公司介绍</h3><p>IntelliJ IDEA，是 JetBrains 公司的产品，该公司成立于 2000 年，总部位于捷克的布拉格，致力于为开发者打造最高效智能的开发工具。</p><p>公司旗下还有其它产品，比如：</p><ul><li>WebStorm：用于开发 JavaScript、HTML 5、CSS 3 等前端技术。</li><li>PyCharm：用于开发 python。</li><li>PhpStorm：用于开发 PHP。</li><li>RubyMine：用于开发 Ruby&#x2F;Rails。</li><li>AppCode：用于开发 Objective-C&#x2F;Swift。</li><li>CLion：用于开发 C&#x2F;C++。</li><li>DataGrip：用于开发数据库和 SQL。</li><li>Rider：用于开发 .NET。</li><li>GoLand：用于开发 Go。</li></ul><p>用于开发 Android 的 Android Studio，也是 Google 基于 IDEA 社区版进行迭代的。</p><h3 id="IntelliJ-IDEA-介绍"><a href="#IntelliJ-IDEA-介绍" class="headerlink" title="IntelliJ IDEA 介绍"></a>IntelliJ IDEA 介绍</h3><p>IDEA，全称 IntelliJ IDEA，是 Java 语言的集成开发环境，目前已经基本代替了 Eclipse 的使用。</p><p>IDEA 在业界被公认为是最好的 Java 开发工具（之一），因其<strong>功能强悍</strong>、<strong>设置人性化</strong>，而深受 Java、大数据、移动端程序员的喜爱。</p><h3 id="IDEA-的主要优势：（vs-Eclipse）"><a href="#IDEA-的主要优势：（vs-Eclipse）" class="headerlink" title="IDEA 的主要优势：（vs Eclipse）"></a>IDEA 的主要优势：（vs Eclipse）</h3><p><strong>功能强大</strong></p><ul><li>强大的整合能力。比如：Git、Maven、Spring 等。</li><li>开箱即用的体验（集成版本控制系统、多语言支持的框架随时可用，无需额外安装插件）。</li></ul><p><strong>符合人体工程学</strong></p><ul><li>高度智能（快速的智能代码补全、实时代码分析、可靠的重构工具）。</li><li>提示功能的快速、便捷、范围广。</li><li>好用的快捷键和代码模板。</li><li>精准搜索。</li></ul><h3 id="IDEA-的下载"><a href="#IDEA-的下载" class="headerlink" title="IDEA 的下载"></a>IDEA 的下载</h3><p>官方网站： <a href="https://www.jetbrains.com/idea/download/#section=windows">https://www.jetbrains.com/idea/download/#section=windows</a></p><p>IDEA 分为两个版本： <strong>旗舰版（Ultimate）和社区版（Community）</strong>。</p><p>IDEA 的大版本每年迭代一次，大版本下的小版本（如：2022.x）迭代时间不固定，一般每年 3 个小版本。</p><h2 id="工程与模块管理"><a href="#工程与模块管理" class="headerlink" title="工程与模块管理"></a>工程与模块管理</h2><h3 id="IDEA-项目结构"><a href="#IDEA-项目结构" class="headerlink" title="IDEA 项目结构"></a>IDEA 项目结构</h3><p><strong>层级关系</strong></p><p>project（工程）- module（模块）- package（包）- class（类）</p><p><strong>具体的</strong></p><p>一个 project 中可以创建多个 module</p><p>一个 module 中可以创建多个 package</p><p>一个 package 中可以创建多个 class</p><p>这些结构的划分，是为了方便管理功能代码。</p><p>Project 和 Module 的概念</p><p>在 IntelliJ IDEA 中，提出了 Project 和 Module 这两个概念。</p><p>在 IntelliJ IDEA 中 Project 是<strong>最顶级的结构单元</strong>，然后就是 Module。</p><p>目前，主流的大型项目结构基本都是多 Module 的结构，这类项目一般是<strong>按功能划分</strong>的，比如：user-core-module、user-facade-module 和 user-hessian-module 等等，模块之间彼此可以<em>相互依赖</em>，有着不可分割的业务关系。</p><p>因此，对于一个 Project 来说：</p><ul><li>当为单 Module 项目的时候，这个单独的 Module 实际上就是一个 Project。</li><li>当为多 Module 项目的时候，多个模块处于同一个 Project 之中，此时彼此之间具有<strong>互相依赖</strong>的关联关系。</li><li>当然多个模块没有建立依赖关系的话，也可以作为单独一个小项目运行。</li></ul><h3 id="创建-Module"><a href="#创建-Module" class="headerlink" title="创建 Module"></a>创建 Module</h3><p>建议创建Empty 空工程，然后创建多模块，每一个模块可以独立运行，相当于一个小项目。</p><h2 id="IDEA-断点调试（Debug）"><a href="#IDEA-断点调试（Debug）" class="headerlink" title="IDEA 断点调试（Debug）"></a>IDEA 断点调试（Debug）</h2><h3 id="为什么需要-Debug"><a href="#为什么需要-Debug" class="headerlink" title="为什么需要 Debug"></a>为什么需要 Debug</h3><p>编好的程序在执行过程中如果出现错误，该如何查找或定位错误呢？简单的代码直接就可以看出来，但如果代码比较复杂，就需要借助程序调试工具（Debug）来查找错误了。</p><p>运行编写好的程序时，可能出现的几种情况：</p><ul><li>情况 1：没有任何 bug，程序执行正确！</li><li>情况 2：运行以后，出现了错误或异常信息。但是通过日志文件或控制台，显示了异常信息的位置。</li><li>情况 3：运行以后，得到了结果，但是结果不是我们想要的。</li><li>情况 4：运行以后，得到了结果，结果大概率是我们想要的。但是多次运行的话，可能会出现不是我们想要的情况。</li></ul><p> 比如：多线程情况下，处理线程安全问题。</p><h3 id="Debug-的步骤"><a href="#Debug-的步骤" class="headerlink" title="Debug 的步骤"></a>Debug 的步骤</h3><p>Debug（调试）程序步骤如下：</p><ol><li>添加断点。</li><li>启动调试。</li><li>单步执行。</li><li>观察变量和执行流程，找到并解决问题。</li></ol><h2 id="IDEA-常用插件"><a href="#IDEA-常用插件" class="headerlink" title="IDEA 常用插件"></a>IDEA 常用插件</h2><p><strong>插件 1：Alibaba Java Coding Guidelines</strong></p><p>阿里巴巴 Java 编码规范检查插件，检测代码是否存在问题，以及是否符合规范。</p><p>使用：在类中，右键，选择编码规约扫描，在下方显示扫描规约和提示。根据提示规范代码，提高代码质量。</p><p><strong>插件 2：jclasslib bytecode viewer</strong></p><p>可视化的字节码查看器。</p><p>使用：</p><ol><li>在 IDEA 打开想研究的类。</li><li>编译该类或者直接编译整个项目（如果想研究的类在 jar 包中，此步可略过）。</li><li>打开“view” 菜单，选择“Show Bytecode With jclasslib” 选项。</li><li>选择上述菜单项后 IDEA 中会弹出 jclasslib 工具窗口。</li></ol><p><strong>插件 3：GenerateAllSetter</strong></p><p>实际开发中还有一个非常常见的场景： 我们创建一个对象后，想依次调用 Setter 函数对属性赋值，如果属性较多很容易遗漏或者重复。</p><p>可以使用这 GenerateAllSetter 提供的功能，快速生成对象的所有 Setter 函数（可填充默认值），然后自己再跟进实际需求设置属性值。</p><p><strong>插件 4：Rainbow Brackets</strong></p><p>给括号添加彩虹色，使开发者通过颜色区分括号嵌套层级，便于阅读。</p><p><strong>插件 5：CodeGlance Pro</strong></p><p>在编辑器右侧生成代码小地图，可以拖拽小地图光标快速定位代码，阅读行数很多的代码文件时非常实用。</p><p><strong>插件 6：Statistic</strong></p><p>代码统计工具。</p><p><strong>插件 7：Presentation Assistant</strong></p><p>显示快捷键操作的按键。</p><p><strong>插件 8：Key Promoter X</strong></p><p>快捷键提示插件。当你执行鼠标操作时，如果该操作可被快捷键代替，会给出提示，帮助你自然形成使用快捷键的习惯，告别死记硬背。</p>]]></content>
      
      
      <categories>
          
          <category> 开发技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> IDEA 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat 安装教程</title>
      <link href="/posts/10002/"/>
      <url>/posts/10002/</url>
      
        <content type="html"><![CDATA[<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><details class="folding-tag" ><summary> Tomcat 安装前的注意事项 </summary>              <div class='content'>              <p>安装 Tomcat 之前，你需要确认你的计算机中安装了 JDK。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Java -version</span><br></pre></td></tr></table></figure><p>如果没有出现下面结果，请访问 <a href="/posts/10001">JDK安装教程</a></p><p><img src="https://pic.imgdb.cn/item/64baad3e1ddac507cc11d6b6.png" alt="2-1 检验 JDK"></p>              </div>            </details><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><details class="folding-tag" ><summary> Tomcat 官网下载 </summary>              <div class='content'>              <div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="http://tomcat.apache.org">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Tomcat 官方下载地址</div>            <div class="tag-link-sitename">Tomcat 版本：9 及以上</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p>版本推荐：Tomcat 9 及以上</p><p>推荐理由：</p><ul><li>Apache Tomcat 10.1.x 是当前的开发重点。它基于 Tomcat 10.0.x 构建，并实现了 Servlet 6.0、JSP TBD、EL TBD、WebSocket TBD 和 Authentication TBD 规范（Jakarta EE 10 平台所需的版本）。</li><li>Tomcat 8.0 现已结束生命周期，应尽快升级到 Tomcat 8.5.x 或更高版本。</li></ul>              </div>            </details><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>此处以 Tomcat 10.1.11 为例，安装过程如下：</p><details class="folding-tag" ><summary> Tomcat 安装步骤 </summary>              <div class='content'>              <ol><li><p>运行 apache-tomcat-10.1.11.exe 进入 Tomcat 安装程序，点击“Next”。</p><p><img src="https://pic.imgdb.cn/item/64bb4b601ddac507cc7eb362.png" alt="2-2 运行安装程序"></p></li><li><p>浏览 Apache 协议，点击“I Agree”。</p><p><img src="https://pic.imgdb.cn/item/64bb4b601ddac507cc7eb4a0.png" alt="2-3 同意 Apache 协议"></p></li><li><p>根据需要选择安装类型，建议选择“Full”，点击“Next”。</p><p><img src="https://pic.imgdb.cn/item/64bb4b611ddac507cc7eb605.png" alt="2-4 选择安装类型"></p></li><li><p>配置 Tomcat 基本信息，设置端口为 8080，设置管理员账号密码，点击“Next”。</p><p><img src="https://pic.imgdb.cn/item/64bb4b611ddac507cc7eb6b3.png" alt="2-5 配置基本信息"></p></li><li><p>选择 Java 运行环境（JRE）文件夹，如果您是根据本文过程，JRE 路径为 <code>D:\Java\jdk-17.0.8</code>，点击“Next”。</p><p><img src="https://pic.imgdb.cn/item/64bb4b611ddac507cc7eb6e1.png" alt="2-6 选择 JRE"></p></li><li><p>选择安装位置，建议安装到 D 盘（例如 <code>D:\Tomcat\Tomcat 10.1.11</code>），点击“Install”。</p><p><img src="https://pic.imgdb.cn/item/64bb4b611ddac507cc7eb86b.png" alt="2-7 选择安装位置"></p></li><li><p>耐心等待安装程序完成。</p><p><img src="https://pic.imgdb.cn/item/64bb4b621ddac507cc7eba9b.png" alt="2-8 等待安装程序完成"></p></li><li><p>点击“Finish”，完成 Tomcat 10 的安装。</p><p><img src="https://pic.imgdb.cn/item/64bb4b621ddac507cc7ebb1a.png" alt="2-9 安装完成"></p></li><li><p>打开浏览器，访问地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:8080</span><br></pre></td></tr></table></figure><p>出现以下内容说明 Tomcat 10 安装成功！</p><p><img src="https://pic.imgdb.cn/item/64bb4b621ddac507cc7ebb87.png" alt="2-10 检验是否成功安装 Tomcat"></p></li></ol>              </div>            </details><h2 id="配置环境变量（可选）"><a href="#配置环境变量（可选）" class="headerlink" title="配置环境变量（可选）"></a>配置环境变量（可选）</h2><details class="folding-tag" ><summary> CATALINA_HOME 环境变量配置步骤 </summary>              <div class='content'>              <ol><li><p>右键“此电脑”，点击“属性”进入系统信息。</p><p><img src="https://pic.imgdb.cn/item/64baaaf81ddac507cc07d05e.png" alt="2-11 右键此电脑，点击属性"></p></li><li><p>在系统信息中点击“高级系统设置”。</p><p><img src="https://pic.imgdb.cn/item/64baaaf81ddac507cc07d074.png" alt="2-12 点击高级系统设置"></p></li><li><p>在系统属性的高级选项卡中，点击“环境变量…”。</p><p><img src="https://pic.imgdb.cn/item/64baaaf81ddac507cc07d0f7.png" alt="2-13 点击环境变量"></p></li><li><p>在系统变量中新建一个变量名为 <code>CATALINA_HOME</code>，变量值为 <code>D:\Tomcat\Tomcat 10.1.11</code> 的系统变量。</p><p><img src="https://pic.imgdb.cn/item/64bb68ee1ddac507ccd91eb8.png" alt="2-14 新建系统变量 CATALINA_HOME"></p></li><li><p>双击系统变量 Path，新建一个名为 <code>%CATALINA_HOME%\bin</code> 的环境变量，并将其上移到顶部，但不要放到最顶部。</p><p><img src="https://pic.imgdb.cn/item/64bb68ee1ddac507ccd91ee0.png" alt="2-15 编辑 Path"></p></li></ol><p>至此，Tomcat 的下载、安装及环境变量配置完成！</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 后端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
            <tag> 安装教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK 安装教程</title>
      <link href="/posts/10001/"/>
      <url>/posts/10001/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><details class="folding-tag" ><summary> Oracle 官网下载 </summary>              <div class='content'>              <div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="http://www.oracle.com/technetwork/java/javase/downloads">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">JDK 官方下载地址</div>            <div class="tag-link-sitename"> JDK 版本：17</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p>版本推荐：JDK 17</p><p>推荐理由：</p><ul><li>JDK 17 是 LTS（长期支持版）。而且是将前面几个过渡版（JDK 9-JDK 16）去其糟粕，取其精华的版本；</li><li>JDK 17 性能提升不少，比如重写了底层 NIO，至少提升 10% 的性能；</li><li>大多数第三方框架和库都已经支持，并且可能出现的问题基本上都可以找到解决方法；</li><li>Spring Boot 3.0 需要 JDK 的最低版本就是 JDK 17，如果你想用 Spring Boot 3.0 开发应用，你需要将正在使用的 Java 8 或 Java 11 升级到 Java 17。</li></ul>              </div>            </details><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><details class="folding-tag" ><summary> JDK 安装步骤 </summary>              <div class='content'>              <ol><li><p>运行 jdk-17_windows-x64_bin.exe 进入 JDK 安装程序，点击“下一步”。</p><p><img src="https://pic.imgdb.cn/item/64ba9fad1ddac507ccdb7605.png" alt="1-1 运行安装程序"></p></li><li><p>选择目标文件夹，这一步可跳过，但建议安装到 D 盘（例如 <code>D:\Java\jdk-17.0.8\</code>）。</p><ul><li>点击“更改”。</li></ul><p><img src="https://pic.imgdb.cn/item/64ba9fae1ddac507ccdb7cbd.png" alt="1-2 选择目标文件夹"></p><ul><li>更改文件夹路径为 <code>D:\Java\jdk-17.0.8\</code>，点击“确定”。</li></ul><p><img src="https://pic.imgdb.cn/item/64ba9faf1ddac507ccdb8005.png" alt="1-3 安装到 D 盘"></p><ul><li>设置好目标文件夹后，点击“下一步”。</li></ul><p><img src="https://pic.imgdb.cn/item/64ba9fb01ddac507ccdb83cd.png" alt="1-4 设置好目标文件夹"></p></li><li><p>耐心等待安装程序完成。</p><p><img src="https://pic.imgdb.cn/item/64ba9fb11ddac507ccdb8796.png" alt="1-5 等待安装程序完成"></p></li><li><p>点击“关闭”，完成 JDK 17 的安装。</p><p><img src="https://pic.imgdb.cn/item/64ba9fb21ddac507ccdb8c9a.png" alt="1-6 JDK 安装完成"></p></li></ol>              </div>            </details><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><details class="folding-tag" ><summary> JAVA_HOME 环境变量配置步骤 </summary>              <div class='content'>              <ol><li><p>右键“此电脑”，点击“属性”进入系统信息。</p><p><img src="https://pic.imgdb.cn/item/64baaaf81ddac507cc07d05e.png" alt="1-7 右键此电脑，点击属性"></p></li><li><p>在系统信息中点击“高级系统设置”。</p><p><img src="https://pic.imgdb.cn/item/64baaaf81ddac507cc07d074.png" alt="1-8 点击高级系统设置"></p></li><li><p>在系统属性的高级选项卡中，点击“环境变量…”。</p><p><img src="https://pic.imgdb.cn/item/64baaaf81ddac507cc07d0f7.png" alt="1-9 点击环境变量"></p></li><li><p>在系统变量中新建一个变量名为 <code>JAVA_HOME</code>，变量值为 <code>D:\Java\jdk-17.0.8</code> 的系统变量。</p><p><img src="https://pic.imgdb.cn/item/64baaaf91ddac507cc07d2ca.png" alt="1-10 新建系统变量 JAVA_HOME"></p></li><li><p>双击系统变量 Path，新建一个名为 <code>%JAVA_HOME%\bin</code> 的环境变量，并将其上移到顶部，但不要放到最顶部。</p><p><img src="https://pic.imgdb.cn/item/64baaaf91ddac507cc07d376.png" alt="1-11 编辑 Path"></p></li></ol>              </div>            </details><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><details class="folding-tag" ><summary> 验证 JDK 是否成功安装 </summary>              <div class='content'>              <p>JDK 的下载、安装及环境变量配置完成后，可以通过 <kbd>win</kbd> + <kbd>R</kbd> 打开命令行终端，然后输入以下命令进行检验：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Java -version</span><br></pre></td></tr></table></figure><p>出现以下结果说明 JDK 17.0.8 安装成功！</p><p><img src="https://pic.imgdb.cn/item/64baad3e1ddac507cc11d6b6.png" alt="1-12 检验 JDK"></p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 后端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装教程 </tag>
            
            <tag> Java </tag>
            
            <tag> JDK </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
